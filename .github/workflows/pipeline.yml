name: Production pipeline

on:
  push:
    branches: [master]
    paths-ignore: ["**/README.md"]
  pull_request:
    branches: [master]
    paths-ignore: ["**/README.md"]
    types: [opened, synchronize]
  workflow_dispatch:

jobs:
  test-and-lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.18.4]

    steps:
      - uses: actions/checkout@v2
      - name: Create env file
        run: |
          touch .env
          echo INFURA_API_KEY=${{ secrets.INFURA_API_KEY }} >> .env
          echo MNEMONIC=${{ secrets.MNEMONIC }} >> .env
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # solves issue https://github.com/actions/setup-node/issues/214
      - name: Reconfigure git to use HTTP authentication
        run: >
          git config --global url."https://github.com/".insteadOf
          ssh://git@github.com/
      - run: npm ci
      - run: npm test
      - run: npm run lint
  coverage:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 12.18.4 ]

    steps:
      - uses: actions/checkout@v2
      - name: Create env file
        run: |
          touch .env
          echo INFURA_API_KEY=${{ secrets.INFURA_API_KEY }} >> .env
          echo MNEMONIC=${{ secrets.MNEMONIC }} >> .env
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # solves issue https://github.com/actions/setup-node/issues/214
      - name: Reconfigure git to use HTTP authentication
        run: >
          git config --global url."https://github.com/".insteadOf
          ssh://git@github.com/
      - run: npm ci
      - run: npm run coverage
      - uses: codecov/codecov-action@v2
        with:
          file: ./coverage.json
          fail_ci_if_error: true
  deploy:
    if: github.ref == 'refs/heads/master'
    needs: [ test-and-lint, coverage ]
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: "https://rostov-payments-server.herokuapp.com/"
    steps:
      - uses: actions/checkout@v2
      - name: Create env file
        run: |
          touch .env
          echo INFURA_API_KEY=${{ secrets.INFURA_API_KEY }} >> .env
          echo MNEMONIC=${{ secrets.MNEMONIC }} >> .env
      - name: "Rename dockerfile for heroku deploy" # workaround
        run: |
          mv Dockerfile Dockerfile-not-needed
          mv heroku-Dockerfile Dockerfile
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          usedocker: true
