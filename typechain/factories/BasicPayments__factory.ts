/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { BasicPayments } from "../BasicPayments";

export class BasicPayments__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<BasicPayments> {
    return super.deploy(overrides || {}) as Promise<BasicPayments>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BasicPayments {
    return super.attach(address) as BasicPayments;
  }
  connect(signer: Signer): BasicPayments__factory {
    return super.connect(signer) as BasicPayments__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicPayments {
    return new Contract(address, _abi, signerOrProvider) as BasicPayments;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DepositMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PaymentMade",
    type: "event",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "sentPayments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b6106d88061007d6000396000f3fe6080604052600436106100595760003560e01c8063679a18221461006f578063715018a6146100b45780638da5cb5b146100c9578063935f4c18146100fa578063d0e30db014610133578063f2fde38b1461013b5761006a565b3661006a57610068333461016e565b005b600080fd5b34801561007b57600080fd5b506100a26004803603602081101561009257600080fd5b50356001600160a01b0316610235565b60408051918252519081900360200190f35b3480156100c057600080fd5b50610068610247565b3480156100d557600080fd5b506100de610305565b604080516001600160a01b039092168252519081900360200190f35b34801561010657600080fd5b506100686004803603604081101561011d57600080fd5b506001600160a01b038135169060200135610314565b6100686104f7565b34801561014757600080fd5b506100686004803603602081101561015e57600080fd5b50356001600160a01b0316610503565b600081116101bc576040805162461bcd60e51b8152602060048201526016602482015275646964206e6f742073656e6420616e792076616c756560501b604482015290519081900360640190fd5b6001600160a01b0382166000908152600160205260409020546101df9082610617565b6001600160a01b038316600081815260016020908152604091829020939093558051848152905191927fd15c9547ea5c06670c0010ce19bc32d54682a4b3801ece7f3ab0c3f17106b4bb92918290030190a25050565b60016020526000908152604090205481565b61024f610678565b6001600160a01b0316610260610305565b6001600160a01b0316146102bb576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b61031c610678565b6001600160a01b031661032d610305565b6001600160a01b031614610388576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b804710156103d2576040805162461bcd60e51b81526020600482015260126024820152716e6f7420656e6f7567682062616c616e636560701b604482015290519081900360640190fd5b6000811161041c576040805162461bcd60e51b815260206004820152601260248201527163616e6e6f742073656e642030207765697360701b604482015290519081900360640190fd5b6040805182815290516001600160a01b038416917f3a2d0e41c506b136330c6e5e0295ccbf0966daece99bfe7c89020cc01dbfb8d6919081900360200190a26040516000906001600160a01b0384169083908381818185875af1925050503d80600081146104a6576040519150601f19603f3d011682016040523d82523d6000602084013e6104ab565b606091505b50509050806104f2576040805162461bcd60e51b815260206004820152600e60248201526d1c185e5b595b9d0819985a5b195960921b604482015290519081900360640190fd5b505050565b610501333461016e565b565b61050b610678565b6001600160a01b031661051c610305565b6001600160a01b031614610577576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166105bc5760405162461bcd60e51b815260040180806020018281038252602681526020018061067d6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600082820183811015610671576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212208b0822b5d6a03f93440af0da44df8d21acc2919e96cff7624a1ae5ae8afcf48064736f6c63430007040033";
